cad_to_usd = {
  '2021-04-27': 0.806071,
  '2021-04-28': 0.812774,
  '2021-04-29': 0.814568,
  '2021-04-30': 0.813666,
  '2021-05-01': 0.813769,
  '2021-05-02': 0.814322,
  '2021-05-03': 0.814296,
  '2021-05-04': 0.812843,
  '2021-05-05': 0.815102,
  '2021-05-06': 0.822676,
  '2021-05-07': 0.824042,
  '2021-05-08': 0.824042,
  '2021-05-09': 0.825457,
  '2021-05-10': 0.826805,
  '2021-05-11': 0.826682,
  '2021-05-12': 0.825048,
  '2021-05-13': 0.82175,
  '2021-05-14': 0.825879,
  '2021-05-15': 0.825879,
  '2021-05-17': 0.828947,
  '2021-05-18': 0.828366,
  '2021-05-19': 0.824215,
  '2021-05-20': 0.828943,
  '2021-05-24': 0.82991,
  '2021-05-25': 0.828741,
  '2021-05-31': 0.829115,
  '2021-06-09': 0.82542,
  '2021-06-13': 0.82247,
  '2021-06-21': 0.808371,
  '2021-06-24': 0.81154,
  '2021-06-25': 0.813402,
  '2021-07-05': 0.810405,
  '2021-07-16': 0.792776,
  '2021-08-05': 0.799971,
  '2021-08-12': 0.79861,
  '2021-08-13': 0.799076,
  '2021-08-14': 0.799076,
  '2021-08-16': 0.795444,
  '2021-08-17': 0.791919,
  '2021-08-26': 0.788401,
  '2021-09-10': 0.788,
  '2021-10-05': 0.794657,
  '2021-10-08': 0.801789,
  '2021-10-11': 0.801253,
  '2021-10-24': 0.808215,
  '2021-10-26': 0.807093,
  '2021-10-27': 0.808391,
  '2021-10-28': 0.809982,
  '2021-10-29': 0.8072,
  '2021-11-03': 0.807856,
  '2021-11-04': 0.802987,
  '2021-11-19': 0.790882,
  '2021-11-20': 0.790882,
  '2021-11-22': 0.787213,
  '2021-11-24': 0.789858,
  '2021-12-20': 0.772974,
  '2021-12-29': 0.782283,
  '2022-01-08': 0.790786,
  '2022-01-26': 0.789955,
  '2022-02-22': 0.78326,
  '2022-03-04': 0.785163,
  '2022-03-14': 0.779967,
  '2022-04-06': 0.795877,
  '2022-04-20': 0.800791,
  '2022-05-14': 0.774869,
  '2022-05-16': 0.778122,
  '2022-06-14': 0.772484,
  '2022-08-18': 0.772341,
  '2022-11-08': 0.745115,
  '2022-11-16': 0.749887,
  '2022-12-19': 0.732842,
}

gbp_to_usd = {
  '2021-04-27': 1.39034,
  '2021-04-28': 1.395106,
  '2021-04-29': 1.39519,
  '2021-04-30': 1.381276,
  '2021-05-01': 1.381677,
  '2021-05-02': 1.382236,
  '2021-05-03': 1.390365,
  '2021-05-04': 1.388975,
  '2021-05-05': 1.39052,
  '2021-05-06': 1.389457,
  '2021-05-07': 1.398428,
  '2021-05-08': 1.397437,
  '2021-05-09': 1.403393,
  '2021-05-10': 1.412751,
  '2021-05-11': 1.413816,
  '2021-05-12': 1.405958,
  '2021-05-13': 1.404338,
  '2021-05-14': 1.40879,
  '2021-05-16': 1.409922,
  '2021-05-17': 1.414124,
  '2021-05-19': 1.410633,
  '2021-05-20': 1.418222,
  '2021-05-21': 1.415385,
  '2021-05-24': 1.415351,
  '2021-05-28': 1.418248,
  '2021-06-09': 1.410732,
  '2021-06-15': 1.408408,
  '2021-06-21': 1.392929,
  '2021-06-22': 1.395592,
  '2021-07-01': 1.37649,
  '2021-07-06': 1.380841,
  '2021-07-08': 1.379883,
  '2021-07-19': 1.367193,
  '2021-08-06': 1.387237,
  '2021-08-22': 1.361908,
  '2021-09-12': 1.383524,
  '2021-10-22': 1.375838,
  '2021-10-26': 1.376406,
  '2021-10-27': 1.373287,
  '2021-10-28': 1.379881,
  '2021-11-21': 1.343057,
  '2021-11-25': 1.331664,
  '2022-01-03': 1.348272,
  '2022-02-01': 1.352503,
  '2022-02-02': 1.357276,
  '2022-02-14': 1.353198,
  '2022-03-14': 1.301033,
  '2022-04-08': 1.303526,
  '2022-05-03': 1.249953,
  '2022-05-14': 1.226467,
  '2022-05-26': 1.261639,
  '2022-06-12': 1.227385,
  '2022-08-11': 1.219517,
  '2022-10-25': 1.14614,
  '2022-11-15': 1.188405,
  '2022-12-01': 1.225885,
  '2022-12-09': 1.225866
}

eur_to_usd = {
  '2021-04-27': 1.208934,
  '2021-04-28': 1.213361,
  '2021-04-29': 1.21229,
  '2021-04-30': 1.202017,
  '2021-05-01': 1.202017,
  '2021-05-02': 1.202916,
  '2021-05-03': 1.205759,
  '2021-05-04': 1.201355,
  '2021-05-05': 1.200547,
  '2021-05-06': 1.206486,
  '2021-05-07': 1.216315,
  '2021-05-08': 1.216318,
  '2021-05-09': 1.21747,
  '2021-05-10': 1.214026,
  '2021-05-11': 1.214619,
  '2021-05-12': 1.207649,
  '2021-05-13': 1.20733,
  '2021-05-16': 1.214679,
  '2021-05-22': 1.217857,
  '2021-06-04': 1.216364,
  '2021-06-06': 1.216317,
  '2021-07-29': 1.189517,
  '2021-08-06': 1.176242,
  '2021-08-17': 1.170642,
  '2021-08-29': 1.179594,
  '2021-10-05': 1.159609,
  '2021-10-26': 1.159474,
  '2021-10-30': 1.15619,
  '2021-11-09': 1.159232,
  '2021-12-07': 1.127142,
  '2021-12-23': 1.132631,
  '2021-12-28': 1.131119,
  '2022-01-11': 1.136699,
  '2022-01-24': 1.132349,
  '2022-01-31': 1.123154,
  '2022-03-02': 1.111296,
  '2022-03-15': 1.096888,
  '2022-03-28': 1.099336,
  '2022-04-21': 1.083459,
  '2022-05-23': 1.068159,
  '2022-06-15': 1.045566,
  '2022-07-25': 1.022321,
  '2022-09-27': 0.959569,
  '2022-10-12': 0.970738,
  '2022-10-29': 0.996439,
  '2022-11-04': 0.99833
}

aud_to_usd = {
  '2021-04-27': 0.776855,
  '2021-04-28': 0.779898,
  '2021-04-29': 0.777616,
  '2021-04-30': 0.771081,
  '2021-05-01': 0.771705,
  '2021-05-02': 0.77168,
  '2021-05-03': 0.775847,
  '2021-05-04': 0.771204,
  '2021-05-05': 0.774933,
  '2021-05-06': 0.778753,
  '2021-05-07': 0.784251,
  '2021-05-08': 0.784397,
  '2021-05-09': 0.785755,
  '2021-05-10': 0.78368,
  '2021-05-11': 0.783954,
  '2021-05-17': 0.777051,
  '2021-05-18': 0.779247,
  '2021-05-24': 0.775019,
  '2021-06-01': 0.774931,
  '2021-06-02': 0.774183,
  '2021-07-06': 0.749893,
  '2021-08-14': 0.736843,
  '2021-08-17': 0.72553,
  '2021-08-24': 0.725155,
  '2021-10-13': 0.737871,
  '2021-10-14': 0.741625,
  '2021-10-20': 0.751948,
  '2021-10-21': 0.746402,
  '2021-10-26': 0.750655,
  '2021-11-20': 0.723317,
  '2022-02-09': 0.717679,
  '2022-04-14': 0.740785,
  '2022-04-23': 0.723888,
  '2022-05-17': 0.703077,
  '2022-07-13': 0.673201
}

# import requests
# import json

# def get_currencies_from_past():
#   results = []
####Sample date is an array getted from data analyzer
#   for date in sample_date:
#     url = f"https://api.apilayer.com/fixer/convert?to=USD&from=CAD&amount=1&date={date}"

#     payload = {}
#     headers= {
#       "apikey": "mock-key"
#     }

#     response = requests.request("GET", url, headers=headers, data = payload)

#     # status_code = response.status_code
#     result = json.loads(response.text)

#     data = { date: result['result']}
#     results = [*results, data]

#   return results

# get_currencies_from_past()


# import requests
# import json

# def get_currencies_from_past():
#     results = {}

#     for date in analyzer.get_unique_dates(subset_name='gbp_group'):

#         key = 'mock-key'
#         url = f'https://api.freecurrencyapi.com/v1/historical?apikey={key}&currencies=USD&base_currency=GBP&date_from={date}&date_to={date}'
#         response = requests.request("GET", url)

#         result = json.loads(response.text)

#         result = result['data']

#         results[date] = result[date]['USD']
    
#     return results

# get_currencies_from_past()